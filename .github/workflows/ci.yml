name: CI

on: [pull_request]

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    environment:
      name: ci
    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PORT: 5432
    services:
      db:
        image: postgres:17.4
        env:
          POSTGRES_DB: ${{ secrets.DB_USER }}
          POSTGRES_USER: ${{ secrets.DB_NAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        distribution: ["temurin"]
        java-version: ["21", "24"]
    steps:
      - name: Java version
        env:
          JAVA_VERSION: ${{ matrix.java-version }}
        run: echo $JAVA_VERSION

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up JDK ${{ matrix.distribution }} ${{ matrix.java-version }}
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: ${{ matrix.distribution }}
          java-version: ${{ matrix.java-version }}
          cache: "gradle"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@06832c7b30a0129d7fb559bcc6e43d26f6374244 # v4.3.1

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: create table on database
        run: ./gradlew flywayMigrate

      - name: execute jOOQ code generator
        run: ./gradlew jooqCodegen

      - name: Check
        run: ./gradlew check
